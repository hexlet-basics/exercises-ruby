---

name: Метод fetch и извлечение значений из хеша
theory: |

  В Ruby помимо стандартного способа извлечения значения из хеша существует метод fetch. В чем же принципиальное отличие?

  ```ruby
  env = {
    api_key: 123,
    host: 'localhost',
    port: 3000 
    }
  puts env[:user] # -> nil
  puts env.fetch(:user) # ->  получим ошибку key not found (KeyError)
  ```
  То есть если мы запрашиваем значение по несуществующему ключу через метод [] (не забываем в Ruby - все есть объект и соответственно [] обычный метод объекта Hash), он молча возвращает nil.
  Метод fetch же действует иначе - если ключа не существует, мы получим ошибку  КеуError

  Метод fetch принемает вторым параметром значение по умалчанию:

  ```ruby
  env = {
    api_key: 123,
    host: 'localhost',
    port: 3000 
    }
  puts env.fetch(:user, nil) # -> nil
  puts env.fetch(:user, 'guest') # ->  'guest'
  ```

  И даже блок или lambda:

  ```
  env = { host: 'localhost' }

  env.fetch(:user) {  |key| env[key] = 'guest' }
  puts env # -> { host: 'localhost', user: 'guest' }

  ```
  А вот конфигурация почтовой рассылки из приложения на Ruby on Rails:

  ```
  config.action_mailer.smtp_settings = {
    user_name: ENV.fetch('MAIL_USERNAME', nil),
    password: ENV.fetch('MAIL_PASSWORD', nil),
    address: ENV.fetch('MAIL_HOST', nil),
    domain: ENV.fetch('MAIL_HOST', nil),
    port: ENV.fetch('SMTP_PORT', '25'),
    authentication: :cram_md5
  }
  ```
  Кстати если следовать ruby style guide метод fetch является более приоритетным.

  **[fetch()](https://apidock.com/ruby/Hash/fetch)**

instructions: |

  Реализуйте функцию setup_env(), которая принимает: ключ, параметры в виде hash и блок который в свою очередь тоже принимает два параметра - это ключ и hash из параметров функции.
  Если переданного ключа нет в передаваемом хеше, то тогда нужно вызвать блок, передав в него первым аргументом ключ, а вторым хеш:

  ```
  env = { api_key: 123 }
  setup_env(:host, env) { |env, key|  env[key] = 'localhost' } # -> { api_key: 123, host: 'lockalhost' }
  setup_env(:key, env) { |env, key|  env[key] = 'localhost' } # -> { api_key: 123 }
  env == { api_key: 123 } # -> true
  ```

  Функция не должна мутировать исходный объект.


tips: []
