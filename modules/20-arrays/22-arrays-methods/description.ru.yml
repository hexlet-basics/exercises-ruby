---

name: Полезные методы
theory: |

  Ниже перечислены некоторые полезные операции над массивами, с которыми программисты часто сталкиваются в реальной жизни.

  ## Вхождение

  Проверка на вхождение элемента в массив:

  ```ruby
  browsers = ['Chrome', 'Firefox', 'Safari', 'Opera', 'IE']
  browsers.include?('Konqueror')
  ```

  ## Слияние

  Для слияния массивов в Ruby принято использовать оператор сложения:

  ```ruby
  # create initial arrays
  a1 = [1, 2, 3]
  a2 = [3, 4, 5]
  a1 + a2 # [1, 2, 3, 3, 4, 5]
  ```

  Либо, в более сложных ситуациях можно воспользоваться splat-оператором:

  ```ruby
  # create initial arrays
  a1 = [1, 2, 3]
  a2 = [6, 7, 8]

  [*a1, 4, 5, *a2] # [1, 2, 3, 4, 5, 6, 7, 8]
  ```

  Оператор `*` раскрывает массив поэлементно в том месте, где он используется.

  ## Fetch

  `fetch()` – метод массивов у которого сразу две цели. С его помощью извлекается значение по определенному индексу с двумя возможными исходами:

  Если указанного индекса в массиве не существует, то возбуждается исключение. Такое поведение удобно в тех случаях, когда отсутствие значения рассматривается как ошибка.

  ```ruby
  items = ['php', 'ruby', 'js', 'java', 'python']
  items.fetch(3) # java
  items.fetch(5) # IndexError
  ```

  Но если передать в `fetch()` второй аргумент, то он будет возвращен как значение по умолчанию если индекса не существует:

  ```ruby
  items = ['php', 'ruby', 'js', 'java', 'python']
  items.fetch(5, 'ruby') # "ruby"
  ```

instructions: |

  Некая организация занимается аналитикой распространения COVID-19. Одна из ее задач – считать еждневное количество заболевших. Из исходных данных у нее есть ежедневное количество заболевших по странам:

  ```ruby
  data = [
    ['usa', 150],
    ['france', 37],
    ['russia', nil]
  ]
  ```

  Некоторые страны не отдают информацию (или делают это неправильно) о заболевших, в результате чего вместо числа заболевших, в исходных данных, появляется `nil`.

  Ваша задача, помочь им написать функцию, которая берет исходные данные, считает общее число заболевших и возвращает наружу:

  ```ruby
  amount_of_cases(data) # 187
  ```


tips: []
