---
name: Строки
theory: |

  Базовые операции со строками в любом языке – это интерполяция и конкатенация. Как это делается на Ruby:

  ```ruby
  # Конкатенация
  name = 'H' + 'e' + 'x' + 'l' + 'e' + 't' # Hexlet
  # Интерполяция
  greeting = "hello #{name}" # hello Hexlet
  ```

  Интерполяция выполняется только в строках с двойными кавычками. Строки, состоящие из одиночных кавычек, воспринимаются «как есть» — по аналогии с PHP.

  ```ruby
  line_feed = "one line\nanotherone"
  # one line
  # another one
  ```

  Как и в большинстве других языков, интерполяция в Ruby предпочтительнее конкатенации.

  Помимо стандартных конкатенации и интерполяции, строки в Ruby усилены срезами и большим числом полезных методов. Вот лишь некоторые примеры:

  ```ruby
  name = 'ruby'
  name.upcase # 'RUBY'
  ''.empty? # true
  name.include? 'ru' # true
  name.capitalize # Ruby
  name.length # 4
  ```

  Одна из самых классных возможсностей у строк – слайсы. С их помощью можно находить любую подстроку в строке. Слайс — тоже метод, но с дополнительным синтаксисом из квадратных скобок:

  ```ruby
  name = 'ruby'
  # второй символ (счёт идет с нуля)
  name[1] # u
  # Последний символ
  name[-1] # y
  # два символа, начиная с нулевого индекса
  name[0, 2] # ru
  # от первого до второго с конца
  name[0..-2] # rub
  # от 4 с конца до последнего символа
  name[-4..] # rub
  # и даже регулярные выражения!
  name[/ru/] # ru
  ```

instructions: |

  Номер банковской карточки является персональной и достаточно чувствительной информацией. Поэтому никакие системы не показывают его полностью даже владельцу карты (вдруг кто-то украл доступ в аккаунт). Вместо этого в интерфейсах часто показывают четыре последние символы, а остальное скрывают за зведочками.

  Реализуйте функцию, которая принимает на вход номер карты (в виде строки) и возвращает строку, в которой шесть символов. Первые два — звездочки, последние четыре соответствуют последним четырём цифрам в номере карты:

  ```ruby
  prepare_card_for_display('1234789023457890') # '**7890'
  prepare_card_for_display('0192837409128735') # '**8735'
  ```

tips:
  - |
    [Документация по строкам](https://ruby-doc.org/core-2.7.2/String.html)
